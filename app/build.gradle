apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.neenbedankt.android-apt'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion setup.compileSdk
    buildToolsVersion setup.buildTools

    defaultConfig {
        applicationId "com.twirling.SDTL"
        minSdkVersion setup.minSdk
        targetSdkVersion setup.targetSdk
        versionCode setup.vcode
        versionName setup.vname
//        jackOptions {
//            enabled true
//        }
//        ndk {
//            abiFilters "armeabi", "armeabi-v7a", "x86", "mips", "arm64-v8a"
//        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['aidl']
            renderscript.srcDirs = ['rs']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jni.srcDirs = [];
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        def isRelease = gradle.startParameter.taskNames.any { it.contains('Release') }
        def path = isRelease ? properties.getProperty("keystore.path") : 'debug.keystore'
        def password = isRelease ? properties.getProperty("keystore.password") : ''
        def alias = isRelease ? properties.getProperty("keystore.alias") : ''
        myConfig {
            storeFile file(path)
            storePassword password
            keyAlias alias
            keyPassword password
        }
    }

    buildTypes {
        release {
            release {
                signingConfig signingConfigs.myConfig
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//    productFlavors {
//        armv7 {
//            ndk {
//                abiFilter "armeabi-v7a"
//            }
//        }
//        armv8 {
//            ndk {
//                abiFilter "armeabi-v7a"
//            }
//        }
//        fat
//    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

def Dagger2_Version = '2.2'
def Rxbinding_Version = '0.4.0'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //
    //    compile "com.twirling.www:libgvr:1.5.6";
    //
    compile(name: 'common', ext: 'aar')
    compile(name: 'commonwidget', ext: 'aar')
    compile(name: 'videowidget', ext: 'aar')
    compile(name: 'base', ext: 'aar')
    compile(name: 'libgvr-1.5.6', ext: 'aar')
    //
    compile "com.android.support:appcompat-v7:${versions.supportLib}"
    compile "com.android.support:cardview-v7:${versions.supportLib}"
    compile "com.android.support:design:${versions.supportLib}"
    compile 'com.alibaba:fastjson:1.2.12'
    //
    compile 'com.orhanobut:logger:1.11'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta3'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta3'
    //
    compile 'com.jakewharton:butterknife:8.1.0'
    apt "com.jakewharton:butterknife-compiler:8.1.0"
    compile 'com.squareup:javapoet:1.7.0'
    //
    compile "com.google.dagger:dagger:$Dagger2_Version"
    provided "com.google.dagger:dagger-compiler:$Dagger2_Version"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    //
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    compile "com.jakewharton.rxbinding:rxbinding:$Rxbinding_Version"
    compile "com.jakewharton.rxbinding:rxbinding-appcompat-v7:$Rxbinding_Version"
    compile "com.jakewharton.rxbinding:rxbinding-design:$Rxbinding_Version"
    //
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jcodecraeer:xrecyclerview:1.2.6'
    //
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.tencent.bugly:crashreport:2.3.0'
    //
    compile 'com.jaeger.statusbaruitl:library:1.0.0'
    //
    compile('com.mikepenz:aboutlibraries:5.6.6@aar') {
        transitive = true
        exclude module: "fastadapter"
    }
    compile 'com.mikepenz:itemanimators:0.2.4@aar'
    compile 'com.mikepenz:crossfader:1.3.7@aar'
    compile 'com.mikepenz:crossfadedrawerlayout:0.3.4@aar'
    compile 'com.mikepenz:google-material-typeface:2.2.0.1@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.4.0.1@aar'
    compile 'com.mikepenz:octicons-typeface:3.0.0.1@aar'
    compile project(':library')
    //    compile files('libs/pldroid-player-1.3.0.jar')
    //
}
//task copyTaskWithPatterns(type: Copy) {
//    from "${buildDir}/outputs/apk/"
//    into "D:/TwirlingVR/"
//    exclude { details ->
//        details.file.name.endsWith('-unaligned.apk') ||
//                details.file.name.endsWith('-unsigned.apk')
//    }
//    include "**/*.apk"
//    println "apk copied. ${buildDir}"
//}
//
//build.doLast {
//    tasks.copyTaskWithPatterns.execute()
//}